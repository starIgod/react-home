{"version":3,"file":"static/js/524.f3fa02da.chunk.js","mappings":"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","sources":["../node_modules/antd/es/_util/styleChecker.js","../node_modules/antd/es/_util/hooks/useFlexGapSupport.js","../node_modules/rc-resize-observer/es/utils/observerUtil.js","../node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","../node_modules/rc-resize-observer/es/Collection.js","../node_modules/rc-resize-observer/es/SingleObserver/index.js","../node_modules/rc-resize-observer/es/index.js","../node_modules/rc-util/es/hooks/useEvent.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"sourcesContent":["import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport const canUseDocElement = () => canUseDom() && window.document.documentElement;\nexport { isStyleSupport };\nlet flexGapSupported;\nexport const detectFlexGapSupported = () => {\n  if (!canUseDocElement()) {\n    return false;\n  }\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  }\n  // create flex container with row-gap set\n  const flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px';\n  // create two, elements inside it\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div'));\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","import * as React from 'react';\nimport { detectFlexGapSupported } from '../styleChecker';\nexport default (() => {\n  const [flexible, setFlexible] = React.useState(false);\n  React.useEffect(() => {\n    setFlexible(detectFlexGapSupported());\n  }, []);\n  return flexible;\n});","import ResizeObserver from 'resize-observer-polyfill';\n// =============================== Const ===============================\nvar elementListeners = new Map();\nfunction onResize(entities) {\n  entities.forEach(function (entity) {\n    var _elementListeners$get;\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 ? void 0 : _elementListeners$get.forEach(function (listener) {\n      return listener(target);\n    });\n  });\n}\n// Note: ResizeObserver polyfill not support option to measure border-box resize\nvar resizeObserver = new ResizeObserver(onResize);\n// Dev env only\nexport var _el = process.env.NODE_ENV !== 'production' ? elementListeners : null; // eslint-disable-line\nexport var _rs = process.env.NODE_ENV !== 'production' ? onResize : null; // eslint-disable-line\n// ============================== Observe ==============================\nexport function observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, new Set());\n    resizeObserver.observe(element);\n  }\n  elementListeners.get(element).add(callback);\n}\nexport function unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n  var _super = _createSuper(DomWrapper);\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return DomWrapper;\n}(React.Component);\nexport { DomWrapper as default };","import * as React from 'react';\nexport var CollectionContext = /*#__PURE__*/React.createContext(null);\n/**\n * Collect all the resize event from children ResizeObserver\n */\nexport function Collection(_ref) {\n  var children = _ref.children,\n    onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = React.useRef(0);\n  var resizeInfosRef = React.useRef([]);\n  var onCollectionResize = React.useContext(CollectionContext);\n  var onResize = React.useCallback(function (size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size: size,\n      element: element,\n      data: data\n    });\n    Promise.resolve().then(function () {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 ? void 0 : onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    });\n    // Continue bubbling if parent exist\n    onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /*#__PURE__*/React.createElement(CollectionContext.Provider, {\n    value: onResize\n  }, children);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { observe, unobserve } from '../utils/observerUtil';\nimport DomWrapper from './DomWrapper';\nimport { CollectionContext } from '../Collection';\nfunction SingleObserver(props, ref) {\n  var children = props.children,\n    disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext);\n  // =========================== Children ===========================\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children;\n  // ============================= Size =============================\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  });\n  // ============================= Ref ==============================\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = React.useMemo(function () {\n    return composeRef(originRef, elementRef);\n  }, [originRef, elementRef]);\n  var getDom = function getDom() {\n    return findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current);\n  };\n  React.useImperativeHandle(ref, function () {\n    return getDom();\n  });\n  // =========================== Observe ============================\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n  // Handler\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n      onResize = _propsRef$current.onResize,\n      data = _propsRef$current.data;\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n      width = _target$getBoundingCl.width,\n      height = _target$getBoundingCl.height;\n    var offsetWidth = target.offsetWidth,\n      offsetHeight = target.offsetHeight;\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size;\n      // IE is strange, right?\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      });\n      // Let collection know what happened\n      onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(sizeInfo, target, data);\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []);\n  // Dynamic observe\n  React.useEffect(function () {\n    var currentElement = getDom();\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]);\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}\nvar RefSingleObserver = /*#__PURE__*/React.forwardRef(SingleObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefSingleObserver.displayName = 'SingleObserver';\n}\nexport default RefSingleObserver;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { warning } from \"rc-util/es/warning\";\nimport SingleObserver from './SingleObserver';\nimport { Collection } from './Collection';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key';\nimport { _rs } from './utils/observerUtil';\nexport { /** @private Test only for mock trigger resize event */\n_rs };\nfunction ResizeObserver(props, ref) {\n  var children = props.children;\n  var childNodes = typeof children === 'function' ? [children] : toArray(children);\n  if (process.env.NODE_ENV !== 'production') {\n    if (childNodes.length > 1) {\n      warning(false, 'Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.');\n    } else if (childNodes.length === 0) {\n      warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n    }\n  }\n  return childNodes.map(function (child, index) {\n    var key = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(SingleObserver, _extends({}, props, {\n      key: key,\n      ref: index === 0 ? ref : undefined\n    }), child);\n  });\n}\nvar RefResizeObserver = /*#__PURE__*/React.forwardRef(ResizeObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefResizeObserver.displayName = 'ResizeObserver';\n}\nRefResizeObserver.Collection = Collection;\nexport default RefResizeObserver;","import * as React from 'react';\nexport default function useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"names":["flexGapSupported","detectFlexGapSupported","canUseDom","window","document","documentElement","undefined","flex","createElement","style","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild","_React$useState","React","_React$useState2","_slicedToArray","flexible","setFlexible","elementListeners","Map","resizeObserver","ResizeObserver","entities","forEach","entity","_elementListeners$get","target","get","listener","DomWrapper","_React$Component","_inherits","_super","_createSuper","_classCallCheck","this","apply","arguments","_createClass","key","value","props","children","CollectionContext","SingleObserver","ref","disabled","elementRef","wrapperRef","onCollectionResize","isRenderProps","mergedChildren","sizeRef","width","height","offsetWidth","offsetHeight","canRef","supportRef","originRef","mergedRef","composeRef","getDom","findDOMNode","current","propsRef","onInternalResize","_propsRef$current","onResize","data","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","mergedOffsetWidth","round","mergedOffsetHeight","sizeInfo","_objectSpread","Promise","resolve","then","element","callback","currentElement","has","set","Set","observe","add","delete","unobserve","INTERNAL_PREFIX_KEY","toArray","map","child","index","concat","_extends","RefResizeObserver","Collection","_ref","onBatchResize","resizeIdRef","resizeInfosRef","currentId","push","Provider","useEvent","fnRef","memoFn","_fnRef$current","_len","length","args","Array","_key","call","MapShim","getIndex","arr","result","some","entry","class_1","__entries__","Object","defineProperty","prototype","enumerable","configurable","entries","splice","clear","ctx","_i","_a","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","_this","observation","WeakMap","method"],"sourceRoot":""}